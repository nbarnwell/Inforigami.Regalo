name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        # Leave out dotnet-version to pick version from your csproj files
        include-prerelease: false

    - name: Start services
      run: docker compose -f docker-compose.yml up -d

    - name: Wait for services to be ready
      run: |
        set -e

        # Wait for RavenDB
        echo "Waiting for RavenDB..."
        for i in {1..60}; do
          if curl -s http://localhost:8080 > /dev/null; then
            echo "RavenDB is ready"
            break
          fi
          sleep 5
        done
        if ! curl -s http://localhost:8080 > /dev/null; then
          echo "RavenDB did not become ready in time"
          exit 1
        fi

        # Wait for SQL Server
        echo "Waiting for SQL Server..."
        for i in {1..60}; do
          if docker logs sqlserver 2>&1 | grep -q "SQL Server is now ready for client connections"; then
            echo "SQL Server is ready"
            break
          fi
          sleep 5
        done
        if ! docker logs sqlserver 2>&1 | grep -q "SQL Server is now ready for client connections"; then
          echo "SQL Server did not become ready in time"
          exit 1
        fi

        # Wait for EventStoreDB
        echo "Waiting for EventStoreDB..."
        for i in {1..60}; do
          if curl -s http://localhost:2113 > /dev/null; then
            echo "EventStoreDB is ready"
            break
          fi
          sleep 5
        done
        if ! curl -s http://localhost:2113 > /dev/null; then
          echo "EventStoreDB did not become ready in time"
          exit 1
        fi
    
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      env:
        Inforigami_Regalo_AzureTableStorage_UnitTest_AzureStorageAccountName: ${{ secrets.AzureStorageAccountName }}
        Inforigami_Regalo_AzureTableStorage_UnitTest_AzureStorageAccountKey: ${{ secrets.AzureStorageAccountKey }}
      run: dotnet test --no-build --verbosity normal

    - name: Stop Docker Compose services
      if: always()
      run: docker compose -f docker-compose.yml down

    - name: Push package to nuget.org
      if: github.ref == 'refs/heads/master'
      env:
        NugetOrgApiKey: ${{ secrets.NugetOrgApiKey }}
      run: pwsh ./PushPackage.ps1